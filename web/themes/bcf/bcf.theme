<?php

/**
 * .theme file for BCF theme.
 */

use Drupal\Component\Utility\Html;

/**
 * Implements hook_preprocess_page().
 */
function bcf_preprocess_page(&$variables) {
  $variables['is_node'] = FALSE;
  $node = \Drupal::routeMatch()->getParameter('node');
  if ($node instanceof \Drupal\node\NodeInterface) {
    $variables['is_node'] = TRUE;
  }

  // On every page except the frontpage we always show the sidebar and a more
  // narrow content area.
  $current_path = \Drupal::service('path.current')->getPath();
  if (!$variables['is_front'] && $current_path != '/nyheder') {
    $variables['contentlayout'] = 'col-md-8 ';
    $variables['sidebarfirst'] = 'col-md-4';
  }

  // Use 3-by-3 layout on tablets also.
  if (!empty($variables['page']['topwidget_first']) && !empty($variables['page']['topwidget_second']) && !empty($variables['page']['topwidget_third'])) {
    $variables['topwidget_class'] = 'col-md-4 col-sm-4';
    $variables['topwidget_third_class'] = 'col-md-4 col-sm-4';
  }
}

/**
 * Implements hook_preprocess_comment().
 */
function bcf_preprocess_comment(&$variables) {
  $date = \Drupal::service('date.formatter')->format(
    $variables['comment']->getCreatedTime(),
    'bcf_standard'
  );

  $account = $variables['comment']->getOwner();
  $username = [
    '#theme' => 'username',
    '#account' => $account,
  ];
  $variables['author'] = \Drupal::service('renderer')->render($username);

  $variables['submitted'] = t('Submitted by @username on @datetime', [
    '@username' => empty($variables['author']) ? 'Anonym' : $variables['author'],
    '@datetime' => $date
  ]);

  $variables['title'] = $variables['comment']->getSubject();
}

/**
 * Implement hook_preprocess_field().
 */
function bcf_preprocess_field(&$variables) {
  // Create some useful classes for all fields.
  $prefix = 'field-';
  $entity_type = $variables['entity_type'];
  $field_name = $variables['field_name'];
  $field_type = $variables['field_type'];

  $variables['attributes']['class'][] = HTML::getClass($prefix . $entity_type);
  $variables['attributes']['class'][] = HTML::getClass($prefix . $field_name);
  $variables['attributes']['class'][] = HTML::getClass($prefix . $field_type);
  $variables['attributes']['class'][] = HTML::getClass($prefix . $entity_type . '-' . $field_name);
  $variables['attributes']['class'][] = HTML::getClass($prefix . $entity_type . '-' . $field_type);
}

/**
 * Implement hook_preprocess_field__node__field_tags().
 */
function bcf_preprocess_field__node__field_tags(&$variables) {
  $variables['attributes']['class'][] = 'field-tags';
  $variables['attributes']['class'][] = 'clearfix';
}

/**
 * Implement hook_preprocess_field__node__field_article_lead().
 */
function bcf_preprocess_field__node__field_article_lead(&$variables) {
  $variables['attributes']['class'][] = 'field-article-lead';
}

/**
 * Implements hook_preprocess_views_view__article_list__page().
 */
function bcf_preprocess_views_view__article_list__page(&$variables) {
  $variables['attributes']['class'][] = 'views-article-list-page';
}
